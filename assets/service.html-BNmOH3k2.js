import{_ as t,c as p,a as s,b as e,w as o,d as l,r as c,o as i,e as u}from"./app-CDIvFa4A.js";const r={},k={class:"table-of-contents"};function d(v,n){const a=c("router-link");return i(),p("div",null,[s("nav",k,[s("ul",null,[s("li",null,[e(a,{to:"#一个服务的实现"},{default:o(()=>n[0]||(n[0]=[u("一个服务的实现")])),_:1})])])]),n[1]||(n[1]=l(`<h2 id="一个服务的实现" tabindex="-1"><a class="header-anchor" href="#一个服务的实现"><span>一个服务的实现</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Foo <span class="token builtin">string</span> <span class="token string">\`yaml:&quot;foo&quot; env:&quot;APP_FOO&quot; default:&quot;test&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Service of database</span></span>
<span class="line"><span class="token keyword">type</span> Service <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	config Config</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Register service when app starting, before http server start</span></span>
<span class="line"><span class="token comment">// you can configure service, initialize global vars etc.</span></span>
<span class="line"><span class="token comment">// running at main goroutine</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Service<span class="token punctuation">)</span> <span class="token function">Register</span><span class="token punctuation">(</span>app <span class="token operator">*</span>framework<span class="token punctuation">.</span>App<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">	app<span class="token punctuation">.</span><span class="token function">Configure</span><span class="token punctuation">(</span><span class="token string">&quot;database&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>s<span class="token punctuation">.</span>config<span class="token punctuation">)</span></span>
<span class="line">	<span class="token function">WithDefaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	defaultLogger<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> logging<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">Channel</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>LogChannel<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">for</span> name<span class="token punctuation">,</span> cc <span class="token operator">:=</span> <span class="token keyword">range</span> s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Connections <span class="token punctuation">{</span></span>
<span class="line">		config <span class="token operator">:=</span> cc</span>
<span class="line">		n <span class="token operator">:=</span> name</span>
<span class="line">		gormdb<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			dsn <span class="token operator">:=</span> config<span class="token punctuation">.</span>DSN</span>
<span class="line">			<span class="token keyword">if</span> n <span class="token operator">==</span> s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Default <span class="token punctuation">{</span></span>
<span class="line">				envDsn <span class="token operator">:=</span> environment<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;DB_DSN&quot;</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token keyword">if</span> envDsn <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">					dsn <span class="token operator">=</span> envDsn</span>
<span class="line">					config<span class="token punctuation">.</span>DSN <span class="token operator">=</span> dsn</span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			log <span class="token operator">:=</span> defaultLogger</span>
<span class="line">			<span class="token keyword">if</span> lc <span class="token operator">:=</span> config<span class="token punctuation">.</span>LogChannel<span class="token punctuation">;</span> lc <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">				log<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> logging<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">Channel</span><span class="token punctuation">(</span>lc<span class="token punctuation">)</span></span>
<span class="line">				<span class="token keyword">if</span> log <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">					log <span class="token operator">=</span> defaultLogger</span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			logLevel <span class="token operator">:=</span> logger<span class="token punctuation">.</span>Info</span>
<span class="line">			<span class="token keyword">if</span> ll <span class="token operator">:=</span> config<span class="token punctuation">.</span>LogLevel<span class="token punctuation">;</span> ll <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">var</span> ok <span class="token builtin">bool</span></span>
<span class="line">				logLevel<span class="token punctuation">,</span> ok <span class="token operator">=</span> logLevelMap<span class="token punctuation">[</span>ll<span class="token punctuation">]</span></span>
<span class="line">				<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span></span>
<span class="line">					logLevel <span class="token operator">=</span> logger<span class="token punctuation">.</span>Info</span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			register<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token function">GetDriverRegister</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>Driver<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;unregistered database driver [%s]&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>Driver<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			conf <span class="token operator">:=</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">			<span class="token keyword">if</span> defaultLogger <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">				conf<span class="token punctuation">.</span>Logger <span class="token operator">=</span> <span class="token operator">&amp;</span>Logger<span class="token punctuation">{</span></span>
<span class="line">					logLevel<span class="token punctuation">:</span>      logLevel<span class="token punctuation">,</span></span>
<span class="line">					logger<span class="token punctuation">:</span>        log<span class="token punctuation">,</span></span>
<span class="line">					SlowThreshold<span class="token punctuation">:</span> <span class="token number">300</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">,</span></span>
<span class="line">					withMigration<span class="token punctuation">:</span> s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>WithMigrationLog<span class="token punctuation">,</span></span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			conf<span class="token punctuation">.</span>DisableForeignKeyConstraintWhenMigrating <span class="token operator">=</span> <span class="token operator">!</span>s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>WithForeignKey</span>
<span class="line">			tx<span class="token punctuation">,</span> e <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token function">register</span><span class="token punctuation">(</span>dsn<span class="token punctuation">)</span><span class="token punctuation">,</span> conf<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">if</span> e <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> e</span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			db<span class="token punctuation">,</span> e <span class="token operator">:=</span> tx<span class="token punctuation">.</span><span class="token function">DB</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">if</span> e <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> e</span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">			db<span class="token punctuation">.</span><span class="token function">SetMaxIdleConns</span><span class="token punctuation">(</span>MaxIdelConns<span class="token punctuation">)</span></span>
<span class="line">			db<span class="token punctuation">.</span><span class="token function">SetMaxOpenConns</span><span class="token punctuation">(</span>MaxOpenConns<span class="token punctuation">)</span></span>
<span class="line">			db<span class="token punctuation">.</span><span class="token function">SetConnMaxIdleTime</span><span class="token punctuation">(</span>MaxIdleTime<span class="token punctuation">)</span></span>
<span class="line">			db<span class="token punctuation">.</span><span class="token function">SetConnMaxLifetime</span><span class="token punctuation">(</span>MaxLifeTime<span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">return</span> tx<span class="token punctuation">,</span> e</span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	gormdb<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">Using</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Default<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">if</span> s<span class="token punctuation">.</span>config<span class="token punctuation">.</span>AuthMigrate <span class="token operator">&amp;&amp;</span> Migrator <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">if</span> tx<span class="token punctuation">,</span> e <span class="token operator">:=</span> gormdb<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">GetConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> e <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">Migrator</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> defaultLogger <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">			defaultLogger<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;[database] migration error %v&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	app<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>ioc container<span class="token punctuation">.</span>Interface<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		ioc<span class="token punctuation">.</span><span class="token function">BindFunc</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>DB<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c container<span class="token punctuation">.</span>Interface<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">return</span> gormdb<span class="token punctuation">.</span>DefaultManager<span class="token punctuation">.</span><span class="token function">GetConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const b=t(r,[["render",d],["__file","service.html.vue"]]),g=JSON.parse('{"path":"/concept/service.html","title":"服务（service）","lang":"zh-CN","frontmatter":{"title":"服务（service）"},"headers":[{"level":2,"title":"一个服务的实现","slug":"一个服务的实现","link":"#一个服务的实现","children":[]}],"git":{"updatedTime":1727664599000,"contributors":[{"name":"Nerio","email":"cjy632258@hotmail.com","commits":2}]},"filePathRelative":"concept/service.md"}');export{b as comp,g as data};
